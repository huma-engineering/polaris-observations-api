"""Initial migration

Revision ID: 91e25778425d
Revises: 
Create Date: 2020-03-24 17:12:23.251858

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "91e25778425d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "observation_set",
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("created_by_", sa.String(), nullable=False),
        sa.Column("modified", sa.DateTime(), nullable=False),
        sa.Column("modified_by_", sa.String(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("encounter_id", sa.String(length=36), nullable=False),
        sa.Column("record_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("score_system", sa.String(), nullable=True),
        sa.Column("score_string", sa.String(), nullable=True),
        sa.Column("score_value", sa.Integer(), nullable=True),
        sa.Column("score_severity", sa.String(), nullable=True),
        sa.Column("monitoring_instruction", sa.String(), nullable=True),
        sa.Column("time_next_obs_set_due", sa.DateTime(timezone=True), nullable=True),
        sa.Column("spo2_scale", sa.Integer(), nullable=True),
        sa.Column("is_partial", sa.Boolean(), nullable=True),
        sa.Column("empty_set", sa.Boolean(), nullable=True),
        sa.Column("ranking", sa.String(), nullable=True),
        sa.Column("obx_reference_range", sa.String(), nullable=True),
        sa.Column("obx_abnormal_flags", sa.String(), nullable=True),
        sa.Column("location", sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_index(
        op.f("ix_observation_set_encounter_id"),
        "observation_set",
        ["encounter_id"],
        unique=False,
    )
    op.create_table(
        "observation",
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("created_by_", sa.String(), nullable=False),
        sa.Column("modified", sa.DateTime(), nullable=False),
        sa.Column("modified_by_", sa.String(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("observation_set_uuid", sa.String(), nullable=True),
        sa.Column("observation_type", sa.String(), nullable=False),
        sa.Column("measured_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("patient_refused", sa.Boolean(), nullable=True),
        sa.Column("score_value", sa.Integer(), nullable=True),
        sa.Column("observation_value", sa.Float(), nullable=True),
        sa.Column("observation_string", sa.String(), nullable=True),
        sa.Column("observation_unit", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["observation_set_uuid"], ["observation_set.uuid"]),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "observation_meta_data",
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("created_by_", sa.String(), nullable=False),
        sa.Column("modified", sa.DateTime(), nullable=False),
        sa.Column("modified_by_", sa.String(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("observation_uuid", sa.String(), nullable=True),
        sa.Column("mask", sa.String(), nullable=True),
        sa.Column("mask_percent", sa.Integer(), nullable=True),
        sa.Column("gcs_eyes", sa.Integer(), nullable=True),
        sa.Column("gcs_eyes_description", sa.String(), nullable=True),
        sa.Column("gcs_verbal", sa.Integer(), nullable=True),
        sa.Column("gcs_verbal_description", sa.String(), nullable=True),
        sa.Column("gcs_motor", sa.Integer(), nullable=True),
        sa.Column("gcs_motor_description", sa.String(), nullable=True),
        sa.Column("patient_position", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["observation_uuid"], ["observation.uuid"]),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("observation_meta_data")
    op.drop_table("observation")
    op.drop_index(op.f("ix_observation_set_encounter_id"), table_name="observation_set")
    op.drop_table("observation_set")
    # ### end Alembic commands ###
